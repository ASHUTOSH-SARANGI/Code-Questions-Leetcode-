class Solution:
    def magicalSum(self, m: int, k: int, nums: List[int]) -> int:
        MOD = 10**9 + 7
        @cache
        def dp(mask, m, k, i):
            if m == 0 and mask.bit_count() == k:
                return 1
            if m == 0 or i == len(nums):
                return 0
            tot = 0
            tot += (dp(mask >> 1, m, k - (mask & 1), i + 1)) % MOD 
            for freq in range(1, m + 1):
                nmask = mask + freq
                next = (dp(nmask >> 1, m - freq, k - (nmask & 1), i + 1)) % MOD 
                tot += (pow(nums[i], freq, MOD) * next * comb(m, freq)) % MOD
            return tot
        return(dp(0, m ,k , 0)) % MOD
